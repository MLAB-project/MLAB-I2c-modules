#!/usr/bin/python

# Python library for SHT3101A MLAB module with SHT31 Temperature and relative humidity sensor.

import time
import datetime
import sys
from pymlab import config
from mongolog import MongoLogger, auto_int
import argparse

#### Script Arguments ###############################################

parser = argparse.ArgumentParser(description='SHT3x driver')
parser.add_argument('--driver', type=str, delauft = None)


#parser.add_argument('--port', metavar='N', type=int, nargs='+',
#                    help='an integer for the accumulator')
#parser.add_argument('--sum', dest='accumulate', action='store_const',
#                    const=sum, default=max,
#                    help='sum the integers (default: find the max)')

args = parser.parse_args()

if len(sys.argv) not in (2, 3):
    sys.stderr.write("Invalid number of arguments.\n")
    sys.stderr.write("Usage: %s PORT ADDRESS\n" % (sys.argv[0], ))
    sys.exit(1)

port    = eval(sys.argv[1])

if len(sys.argv) == 3:
    address = eval(sys.argv[2])
else:
    address = 0x45

print("Sensor addr:", address)



logger = MongoLogger(sensor_type = "SHT3x", sensor = "HYGRO01")


#### Sensor Configuration ###########################################

''''
cfg = config.Config(
    i2c = {
        "port": port,
    },

	bus = [
		{
            "type": "i2chub",
            "address": 0x72,

            "children": [
                {"name": "sht", "type": "sht31", "channel": 1, }
            ],
		},
	],
)

'''
cfg = config.Config(
    i2c = {
        "port": port,
#        "device": 'hid',
    },
    bus = [
        {
            "name":          "sht",
            "type":        "sht31",
            "address":        address,
        },
    ],
)


cfg.initialize()

print ("SHT31 sensor readout example \r\n")
sensor = cfg.get_device("sht")

sensor.soft_reset()
time.sleep(0.1)

#### Data Logging ###################################################

try:
    while True:
        temperature, humidity = sensor.get_TempHum()
        data = {"temp": temperature, "hum": humidity}
        logger.insert_data(data)
        sys.stdout.write("Temp: %0.2f, Hum: %0.2f\r\n" % (temperature, humidity))
        sys.stdout.flush()
        time.sleep(0.25)

except KeyboardInterrupt:
    sys.exit(0)
